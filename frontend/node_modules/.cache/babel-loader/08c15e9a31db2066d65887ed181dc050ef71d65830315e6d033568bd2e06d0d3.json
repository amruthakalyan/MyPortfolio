{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalya\\\\OneDrive\\\\Desktop\\\\MyPortfolio\\\\portfolio\\\\frontend\\\\src\\\\components\\\\Projects.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import api from '../api';\n// import ProjectCard from './ProjectCard';\n\n// export default function Projects(){\n// const [projects, setProjects] = useState([]);\n// const [loading, setLoading] = useState(true);\n\n// useEffect(()=>{\n// api.get('/projects').then(r=>{\n// setProjects(r.data);\n// setLoading(false);\n// }).catch(e=>{ setLoading(false); });\n// },[]);\n\n// return (\n// <section>\n// <h2>Projects</h2>\n// {loading ? <p>Loading...</p> : (\n// <div className=\"grid\">\n// {projects.map(p => <ProjectCard key={p._id} p={p} />)}\n// </div>\n// )}\n// </section>\n// );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../api\";\nimport ProjectCard from \"./ProjectCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Projects() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    api.get(\"/projects\").then(r => {\n      if (r.data && r.data.length > 0) {\n        setProjects(r.data);\n      } else {\n        setProjects(staticProjects);\n      }\n      setLoading(false);\n    }).catch(() => {\n      setProjects(staticProjects); // fallback if API fails\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    className: \"portfolio\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Click the image to view the Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-grid\",\n      children: projects.map((p, i) => p._id ? /*#__PURE__*/_jsxDEV(ProjectCard, {\n        p: p\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n        href: p.link,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: p.img,\n          alt: \"project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"OQ1VoVBkBYQ0DtEeE9la9LZgEb0=\");\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","api","ProjectCard","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","loading","setLoading","get","then","r","data","length","staticProjects","catch","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","i","_id","href","link","target","rel","src","img","alt","_c","$RefreshReg$"],"sources":["C:/Users/kalya/OneDrive/Desktop/MyPortfolio/portfolio/frontend/src/components/Projects.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import api from '../api';\r\n// import ProjectCard from './ProjectCard';\r\n\r\n\r\n// export default function Projects(){\r\n// const [projects, setProjects] = useState([]);\r\n// const [loading, setLoading] = useState(true);\r\n\r\n\r\n// useEffect(()=>{\r\n// api.get('/projects').then(r=>{\r\n// setProjects(r.data);\r\n// setLoading(false);\r\n// }).catch(e=>{ setLoading(false); });\r\n// },[]);\r\n\r\n\r\n// return (\r\n// <section>\r\n// <h2>Projects</h2>\r\n// {loading ? <p>Loading...</p> : (\r\n// <div className=\"grid\">\r\n// {projects.map(p => <ProjectCard key={p._id} p={p} />)}\r\n// </div>\r\n// )}\r\n// </section>\r\n// );\r\n// }\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"../api\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\n\r\n\r\nexport default function Projects() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/projects\")\r\n      .then((r) => {\r\n        if (r.data && r.data.length > 0) {\r\n          setProjects(r.data);\r\n        } else {\r\n          setProjects(staticProjects);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setProjects(staticProjects); // fallback if API fails\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"projects\" className=\"portfolio\">\r\n      <h1>Projects</h1>\r\n      <h5>Click the image to view the Page</h5>\r\n\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div className=\"projects-grid\">\r\n          {projects.map((p, i) =>\r\n            p._id ? (\r\n              <ProjectCard key={p._id} p={p} />\r\n            ) : (\r\n              <a key={i} href={p.link} target=\"_blank\" rel=\"noreferrer\">\r\n                <img src={p.img} alt=\"project\" />\r\n              </a>\r\n            )\r\n          )}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdE,GAAG,CACAU,GAAG,CAAC,WAAW,CAAC,CAChBC,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,CAACC,IAAI,IAAID,CAAC,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC/BP,WAAW,CAACK,CAAC,CAACC,IAAI,CAAC;MACrB,CAAC,MAAM;QACLN,WAAW,CAACQ,cAAc,CAAC;MAC7B;MACAN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDO,KAAK,CAAC,MAAM;MACXT,WAAW,CAACQ,cAAc,CAAC,CAAC,CAAC;MAC7BN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAASc,EAAE,EAAC,UAAU;IAACC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC1ChB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpB,OAAA;MAAAgB,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAExCf,OAAO,gBACNL,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBpB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3Bb,QAAQ,CAACkB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KACjBD,CAAC,CAACE,GAAG,gBACHxB,OAAA,CAACF,WAAW;QAAawB,CAAC,EAAEA;MAAE,GAAZA,CAAC,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,gBAEjCpB,OAAA;QAAWyB,IAAI,EAAEH,CAAC,CAACI,IAAK;QAACC,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,YAAY;QAAAZ,QAAA,eACvDhB,OAAA;UAAK6B,GAAG,EAAEP,CAAC,CAACQ,GAAI;UAACC,GAAG,EAAC;QAAS;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD3BG,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CAEP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd;AAAClB,EAAA,CA3CuBD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}